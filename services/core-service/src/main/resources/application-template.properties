# Application Configuration Template
# Copy this to application-local.properties and customize for your environment

app.name=Building Management System
spring.application.name=bms-core-service

# Server Configuration
server.port=8080
server.servlet.context-path=/api/v1

# Database Configuration - PostgreSQL
# For local development: Use Docker PostgreSQL (localhost:5432)
# For production: Use AWS RDS PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/bms_core
spring.datasource.username=bms_user
spring.datasource.password=bms_password
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1800000

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# JWT Configuration - CHANGE THESE FOR PRODUCTION!
jwt.secret=CHANGE_THIS_SECRET_KEY_FOR_PRODUCTION_MINIMUM_256_BITS_LONG_AND_SECURE
jwt.access-token-expiration=900
jwt.refresh-token-expiration=2592000
jwt.issuer=bms-api
jwt.audience=bms-app

# Email Configuration (SMTP) - CONFIGURE FOR YOUR ENVIRONMENT
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=YOUR_EMAIL@gmail.com
spring.mail.password=YOUR_APP_PASSWORD
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.from=noreply@yourdomain.com

# SMS Configuration
sms.enabled=false

# File Upload Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# AWS S3 Configuration
aws.s3.bucket-name=${AWS_S3_BUCKET_NAME:bms-app-storage}
aws.s3.region=${AWS_S3_REGION:us-east-2}
aws.s3.access-key=${AWS_S3_ACCESS_KEY:your-access-key}
aws.s3.secret-key=${AWS_S3_SECRET_KEY:your-secret-key}
aws.s3.base-url=${AWS_S3_BASE_URL:https://s3.us-east-2.amazonaws.com}

# AWS CloudFront Configuration
aws.cloudfront.enabled=${AWS_CLOUDFRONT_ENABLED:true}
aws.cloudfront.domain=${AWS_CLOUDFRONT_DOMAIN:your-cloudfront-domain.cloudfront.net}

# Logging Configuration
logging.level.com.bms.backend=INFO
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=INFO
logging.level.org.hibernate.SQL=INFO
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=INFO

# Profile Configuration
spring.profiles.active=dev

# Actuator Configuration (for health checks)
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized

# Jackson Configuration
spring.jackson.default-property-inclusion=non_null
spring.jackson.time-zone=UTC
spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.write-durations-as-timestamps=false

# Validation Configuration
spring.validation.enabled=true