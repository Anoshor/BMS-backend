version: '3.8'

services:
  # Core Service
  bms-core-service:
    build:
      context: ./services/core-service
      dockerfile: Dockerfile
    image: anoshorpaul/bms-core-service:latest
    container_name: bms-core-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-core:5432/bms_core
      - SPRING_DATASOURCE_USERNAME=bms_user
      - SPRING_DATASOURCE_PASSWORD=bms_password
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_TOKEN_EXPIRATION=${JWT_ACCESS_TOKEN_EXPIRATION:-900}
      - JWT_REFRESH_TOKEN_EXPIRATION=${JWT_REFRESH_TOKEN_EXPIRATION:-2592000}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      - AWS_S3_REGION=${AWS_S3_REGION}
      - AWS_S3_ACCESS_KEY=${AWS_S3_ACCESS_KEY}
      - AWS_S3_SECRET_KEY=${AWS_S3_SECRET_KEY}
      - AWS_S3_BASE_URL=${AWS_S3_BASE_URL}
      - AWS_CLOUDFRONT_DOMAIN=${AWS_CLOUDFRONT_DOMAIN}
      - AWS_CLOUDFRONT_ENABLED=${AWS_CLOUDFRONT_ENABLED:-true}
    depends_on:
      postgres-core:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    networks:
      - bms-network

  # Notification Service
  bms-notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    image: anoshorpaul/bms-notification-service:latest
    container_name: bms-notification-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-notification:5432/bms_notifications
      - SPRING_DATASOURCE_USERNAME=bms_user
      - SPRING_DATASOURCE_PASSWORD=bms_password
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
    depends_on:
      postgres-notification:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    networks:
      - bms-network

  # PostgreSQL Database for Core Service
  postgres-core:
    image: postgres:15
    environment:
      - POSTGRES_DB=bms_core
      - POSTGRES_USER=bms_user
      - POSTGRES_PASSWORD=bms_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_core_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bms_user -d bms_core"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bms-network

  # PostgreSQL Database for Notification Service
  postgres-notification:
    image: postgres:15
    environment:
      - POSTGRES_DB=bms_notifications
      - POSTGRES_USER=bms_user
      - POSTGRES_PASSWORD=bms_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_notification_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bms_user -d bms_notifications"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bms-network

  # Redis for caching and message queues
  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bms-network

volumes:
  postgres_core_data:
  postgres_notification_data:
  redis_data:

networks:
  bms-network:
    driver: bridge